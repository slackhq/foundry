<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.8.0-alpha01" type="baseline" client="gradle" dependencies="false" name="AGP (8.6.1)" variant="all" version="8.8.0-alpha01">

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="        project.rootProject.layout.projectDirectory.file(&quot;ci/release.version&quot;)"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/ApkVersioningPlugin.kt"
            line="82"
            column="17"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="        project.rootProject.file(&quot;config/detekt/detekt.yml&quot;)"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/DetektTasks.kt"
            line="83"
            column="17"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="            config.from(project.rootProject.file(configFile))"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/DetektTasks.kt"
            line="86"
            column="33"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="  if (project.rootProject.extensions.findByName(&quot;develocity&quot;) != null) {"
        errorLine2="              ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/develocity/DevelocityFinderApi.kt"
            line="33"
            column="15"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="    return DevelocityConfigurationAdapter(project.rootProject.extensions.getByName(&quot;develocity&quot;))"
        errorLine2="                                                  ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/develocity/DevelocityFinderApi.kt"
            line="34"
            column="51"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="  } else if (project.rootProject.extensions.findByName(&quot;gradleEnterprise&quot;) != null) {"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/develocity/DevelocityFinderApi.kt"
            line="36"
            column="22"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="        project.rootProject.extensions.getByName(&quot;gradleEnterprise&quot;)"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/develocity/DevelocityFinderApi.kt"
            line="38"
            column="17"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="        project.rootProject.layout.projectDirectory.file(it)"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryProperties.kt"
            line="175"
            column="17"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="    require(project == project.rootProject) {"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryRootPlugin.kt"
            line="69"
            column="32"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="      delete(rootProject.layout.buildDirectory)"
        errorLine2="             ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryRootPlugin.kt"
            line="489"
            column="14"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="      check(project == project.rootProject) { &quot;Project is not root project!&quot; }"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GlobalConfig.kt"
            line="32"
            column="32"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="  get() = rootProject === this"
        errorLine2="          ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="64"
            column="11"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Use providers.gradleProperty instead of findProperty"
        errorLine1="      (findProperty(AndroidProject.PROPERTY_BUILD_MODEL_ONLY) == &quot;true&quot; ||"
        errorLine2="       ~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="240"
            column="8"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Use providers.gradleProperty instead of findProperty"
        errorLine1="        findProperty(AndroidProject.PROPERTY_GENERATE_SOURCES_ONLY) == &quot;true&quot;)"
        errorLine2="        ~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="241"
            column="9"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Use providers.gradleProperty instead of hasProperty"
        errorLine1="  get() = hasProperty(&quot;android.injected.invoked.from.ide&quot;)"
        errorLine2="          ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="245"
            column="11"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="      lintConfig = rootProject.layout.projectDirectory.file(&quot;config/lint/lint.xml&quot;).asFile"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/LintTasks.kt"
            line="339"
            column="20"/>
    </issue>

    <issue
        id="GradleProjectIsolation"
        message="Avoid using method getRootProject"
        errorLine1="            else -> project.rootProject.projectDir.absolutePath"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/unittest/UnitTests.kt"
            line="229"
            column="29"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.SdkLocationSourceSet"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/AndroidSourcesConfigurer.kt"
            line="18"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.SdkLocator"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/AndroidSourcesConfigurer.kt"
            line="19"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.dsl.BuildType"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/AnnotationProcessing.kt"
            line="20"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.publishing.AndroidArtifacts"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/tasks/BaseDependencyCheckTask.kt"
            line="18"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactType"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/tasks/BaseDependencyCheckTask.kt"
            line="19"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.tasks.databinding.DataBindingGenBaseClassesTask"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryExtension.kt"
            line="25"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.lint.AndroidLintAnalysisTask"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/LintTasks.kt"
            line="23"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.lint.LintModelWriterTask"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/LintTasks.kt"
            line="24"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.lint.VariantInputs"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/lint/LintTasks.kt"
            line="25"
            column="1"/>
    </issue>

    <issue
        id="InternalAgpApiUsage"
        message="Avoid using internal Android Gradle Plugin APIs"
        errorLine1="import com.android.build.gradle.internal.dsl.BaseAppModuleExtension"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/StandardProjectConfigurations.kt"
            line="31"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.internal.component.external.model.ModuleComponentArtifactIdentifier"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/tasks/BaseDependencyCheckTask.kt"
            line="26"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.internal.logging.progress.ProgressLoggerFactory"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/tasks/BaseDownloadTask.kt"
            line="31"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.internal.os.OperatingSystem"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryTools.kt"
            line="52"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.api.internal.project.ProjectInternal"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="30"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.internal.service.ServiceRegistry"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/GradleExt.kt"
            line="43"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.api.internal.provider.MissingValueException"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/Platforms.kt"
            line="33"
            column="1"/>
    </issue>

    <issue
        id="InternalGradleApiUsage"
        message="Avoid using internal Gradle APIs"
        errorLine1="import org.gradle.internal.logging.progress.ProgressLogger"
        errorLine2="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/tasks/ProgressResponseBody.kt"
            line="26"
            column="1"/>
    </issue>

    <issue
        id="WithTypeWithoutConfigureEach"
        message="Avoid passing a closure to withType, use withType().configureEach instead"
        errorLine1="        project.tasks.withType(JavaCompile::class.java, baseConfig.javaCompileAptAction)"
        errorLine2="                      ~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/AnnotationProcessing.kt"
            line="142"
            column="23"/>
    </issue>

    <issue
        id="WithTypeWithoutConfigureEach"
        message="Avoid passing a closure to withType, use withType().configureEach instead"
        errorLine1="    project.plugins.withType(AppPlugin::class.java) {"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/ApkVersioningPlugin.kt"
            line="50"
            column="21"/>
    </issue>

    <issue
        id="WithTypeWithoutConfigureEach"
        message="Avoid passing a closure to withType, use withType().configureEach instead"
        errorLine1="  tasks.withType(T::class.java) {"
        errorLine2="        ~~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/FoundryGradleUtil.kt"
            line="270"
            column="9"/>
    </issue>

    <issue
        id="ExceptionMessage"
        message="Please specify a `lazyMessage` param for require"
        errorLine1="            add(&quot;api&quot;, def.coordinates) { version { require(version) } }"
        errorLine2="                                                    ~~~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/Platforms.kt"
            line="269"
            column="53"/>
    </issue>

    <issue
        id="ExceptionMessage"
        message="Please specify a `lazyMessage` param for check"
        errorLine1="    check(logs.isNotEmpty())"
        errorLine2="    ~~~~~">
        <location
            file="src/main/kotlin/foundry/gradle/util/ThermalsWatcher.kt"
            line="216"
            column="5"/>
    </issue>

</issues>
