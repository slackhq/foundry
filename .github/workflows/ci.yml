name: CI

on:
  # Only run push on main
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  # Always run on PRs
  pull_request:
    branches: [ main ]
  merge_group:

concurrency:
  group: 'ci-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Export JDK version
        shell: bash
        run: |
          JDK_VERSION=$(grep "jdk =" gradle/libs.versions.toml | head -n 1 | cut -d'=' -f2 | tr -d '"' | xargs)
          echo "JDK_VERSION=${JDK_VERSION}" >> $GITHUB_ENV

      - name: Install JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and run tests
        id: gradle
        timeout-minutes: 10
        run: ./gradlew check

      - name: Print build scan url
        if: always()
        run: echo ${{ steps.gradle.outputs.build-scan-url }}

      - name: (Fail-only) Upload build reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/**

  publish-snapshot:
    name: 'Publish snapshot (main only)'
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: 'build'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Export JDK version
        shell: bash
        run: |
          JDK_VERSION=$(grep "jdk =" gradle/libs.versions.toml | head -n 1 | cut -d'=' -f2 | tr -d '"' | xargs)
          echo "JDK_VERSION=${JDK_VERSION}" >> $GITHUB_ENV

      - name: Install JDK ${{ env.JDK_VERSION }}
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '${{ env.JDK_VERSION }}'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Publish snapshot
        if: github.repository == 'slackhq/foundry'
        run: ./gradlew publish -PmavenCentralUsername=${{ secrets.SONATYPEUSERNAME }} -PmavenCentralPassword=${{ secrets.SONATYPEPASSWORD }}
