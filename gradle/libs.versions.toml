[versions]
agp = "8.7.0"
agpAlpha = "8.8.0-alpha05"
anvil = "2.5.0-beta11"
# Release notes: https://asm.ow2.io/versions.html
asm = "9.7.1"
bugsnagGradle = "8.1.0"
circuit = "0.23.1"
compose-jb = "1.7.0-rc01"
compose-jb-stable = "1.7.0+build1877-release-1.7"
coroutines = "1.9.0"
# https://plugins.jetbrains.com/docs/intellij/using-kotlin.html#coroutinesLibraries
coroutines-ij = "1.8.0"
dependencyAnalysisPlugin = "2.1.4"
detekt = "1.23.7"
dokka = "1.9.20"
errorproneGradle = "4.0.1"
gradle-retry = "1.6.0"
graph-assert = "2.7.1"
intellij-platform = "2.1.0"
# Temporary until https://bugs.openjdk.org/browse/JDK-8331027 is fixed in 23
jdk = "21"
jvmTarget = "17"
jewel = "0.25.0"
jna = "5.15.0"
kaml = "0.61.0"
kotlin = "2.0.20"
kotlinx-serialization = "1.7.3"
ksp = "2.0.20-1.0.25"
kotlinPoet = "1.18.1"
ktfmt = "0.52"
markdown = "0.26.0"
mavenPublish = "0.29.0"
moshi = "1.15.1"
moshix = "0.28.0"
nullawayGradle = "2.0.0"
okhttp = "5.0.0-alpha.12"
okio = "3.9.1"
retrofit = "2.11.0"
slack-lint = "0.8.1"
sortDependencies = "0.7"
spotless = "7.0.0.BETA2"
sqldelight = "2.0.2"
versionsPlugin = "0.51.0"
wire = "5.1.0"
xmlutil = "0.90.1"

[plugins]
bestPracticesPlugin = { id = "com.autonomousapps.plugin-best-practices-plugin", version = "0.10" }
binaryCompatibilityValidator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version = "0.16.3" }
buildConfig = { id = "com.github.gmazzo.buildconfig", version = "5.5.0" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-jb" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
graphAssert = { id = "com.jraska.module.graph.assertion", version.ref = "graph-assert" }
intellij = { id = "org.jetbrains.intellij.platform", version.ref = "intellij-platform" }
intellij-settings = { id = "org.jetbrains.intellij.platform.settings", version.ref = "intellij-platform" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-plugin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-plugin-sam = { id = "org.jetbrains.kotlin.plugin.sam.with.receiver", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
lint = { id = "com.android.lint", version.ref = "agp" }
mavenPublish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
moshiGradlePlugin = { id = "dev.zacsweers.moshix", version.ref = "moshix" }
moshix = { id = "dev.zacsweers.moshix", version.ref = "moshix" }
pluginUploader = { id = "dev.bmac.intellij.plugin-uploader", version = "1.3.5" }
retry = { id = "org.gradle.test-retry", version.ref = "gradle-retry" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
sortDependencies = { id = "com.squareup.sort-dependencies", version.ref = "sortDependencies" }
versionsPlugin = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
wire = { id = "com.squareup.wire", version.ref = "wire" }

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
agpAlpha = { module = "com.android.tools.build:gradle", version.ref = "agpAlpha" }
asm-bom = { module = "org.ow2.asm:asm-bom", version.ref = "asm" }
autoService-annotations = "com.google.auto.service:auto-service-annotations:1.1.1"
autoService-ksp = "dev.zacsweers.autoservice:auto-service-ksp:1.2.0"
bugsnag = "com.bugsnag:bugsnag:3.7.2"
clikt = "com.github.ajalt.clikt:clikt:5.0.1"
circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
commonsText = "org.apache.commons:commons-text:1.12.0"
composeLints = "com.slack.lint.compose:compose-lint-checks:1.4.1"
compose-markdown = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }
coroutines-bom = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-bom", version.ref = "coroutines" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }
coroutines-core-ij = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines-ij" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test" }
detekt = { module = "io.gitlab.arturbosch.detekt:detekt-core", version.ref = "detekt" }
develocity-agent-adapters = "com.gradle:develocity-gradle-plugin-adapters:1.0.4"
gradleLints = "androidx.lint:lint-gradle:1.0.0-alpha02"
gradlePlugins-anvil = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }
gradlePlugins-bugsnag = { module = "com.bugsnag:bugsnag-android-gradle-plugin", version.ref = "bugsnagGradle" }
gradlePlugins-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-jb-stable" }
gradlePlugins-composeCompiler = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
gradlePlugins-dependencyAnalysis = { module = "com.autonomousapps:dependency-analysis-gradle-plugin", version.ref = "dependencyAnalysisPlugin" }
gradlePlugins-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
gradlePlugins-develocity = "com.gradle:develocity-gradle-plugin:3.18.1"
gradlePlugins-doctor = "com.osacky.doctor:doctor-plugin:0.10.0"
gradlePlugins-errorProne = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "errorproneGradle" }
gradlePlugins-graphAssert = { module = "com.jraska.module.graph.assertion:plugin", version.ref = "graph-assert" }
gradlePlugins-kgp = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugins-kgp-api = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugins-ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }
gradlePlugins-moshix = { module = "dev.zacsweers.moshix:moshi-gradle-plugin", version.ref = "moshix" }
gradlePlugins-nullaway = { module = "net.ltgt.gradle:gradle-nullaway-plugin", version.ref = "nullawayGradle" }
gradlePlugins-redacted = "dev.zacsweers.redacted:redacted-compiler-plugin-gradle:1.10.0"
gradlePlugins-retry = { module = "org.gradle:test-retry-gradle-plugin", version.ref = "gradle-retry" }
gradlePlugins-sortDependencies = { module = "com.squareup:sort-dependencies-gradle-plugin", version.ref = "sortDependencies" }
gradlePlugins-spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
gradlePlugins-sqldelight = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
gradlePlugins-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsPlugin" }
gradlePlugins-wire = { module = "com.squareup.wire:wire-gradle-plugin", version.ref = "wire" }
guava = "com.google.guava:guava:33.3.1-jre"
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-gradlePlugins-bom = { module = "org.jetbrains.kotlin:kotlin-gradle-plugins-bom", version.ref = "kotlin" }
kotlin-poet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinShell = "eu.jrie.jetbrains:kotlin-shell-core:0.2.1"
ktfmt = { module = "com.facebook:ktfmt", version.ref = "ktfmt" }
jewel-bridge = { module = "org.jetbrains.jewel:jewel-ide-laf-bridge-242", version.ref = "jewel" }
jewel-standalone = { module = "org.jetbrains.jewel:jewel-int-ui-standalone-242", version.ref = "jewel" }
jgrapht = "org.jgrapht:jgrapht-core:1.5.2"
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
jna-platform = { module = "net.java.dev.jna:jna-platform", version.ref = "jna" }
junit = "junit:junit:4.13.2"
markdown = "org.jetbrains:markdown:0.7.3"
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-fakefilesystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }
oshi = "com.github.oshi:oshi-core:6.6.5"
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-converters-wire = { module = "com.squareup.retrofit2:converter-wire", version.ref = "retrofit" }
rxjava = "io.reactivex.rxjava3:rxjava:3.1.9"
sarif4k = "io.github.detekt.sarif4k:sarif4k:0.6.0"
slackLints-checks = { module = "com.slack.lint:slack-lint-checks", version.ref = "slack-lint" }
slackLints-annotations = { module = "com.slack.lint:slack-lint-annotations", version.ref = "slack-lint" }
slf4jNop = "org.slf4j:slf4j-nop:2.0.16"
tikxml-htmlEscape = { module = "com.tickaroo.tikxml:converter-htmlescape", version = "0.8.15" }
truth = "com.google.truth:truth:1.4.4"
xmlutil-core = { module = "io.github.pdvrieze.xmlutil:core", version.ref = "xmlutil" }
xmlutil-serialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "xmlutil" }